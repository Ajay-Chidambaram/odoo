name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Build-Deb 
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        
      # Prerequisites for building debian package
      - name: Prerequisites
        run: |
          sudo apt-get -y update
          sudo apt-get -y install devscripts dpkg-dev 
     
      # To fetch source packages  
      - name: sed command
        run: sudo sed -i -e '/deb-src/s/^#//g' /etc/apt/sources.list
     
      # # Debugging
      # - name: Debug-1
      #   run: |
      #     pwd
      #     cat /etc/apt/sources.list
      #     ls ../
      #     ls ~/
          
      # To install additional packages for the application to function properly.
      - name: Install Build Dependencies
        run: |
          sudo apt -y update
          sudo apt -y build-dep odoo

      # To build the package
      - name: Build Package
        run: sudo debuild -b -uc -us

      # # Debug
      # - name: Debug-2
      #   run: ls ../

      # Copy .deb to Different folder
      - name: Copy deb
        run: |
          sudo cp ../*.deb ./docker-files/

      # # Debug
      # - name: Debug-3
      #   run: ls ./docker-files/

      # To store .deb as cache
      - name: Cache Debian Package
        uses: actions/cache@v2 
        id: restore-build
        env:
          cache-name: cache-deb
        with:
          path: /home/runner/work/odoo/odoo/docker-files/*
          key: ${{ github.sha }}

      # To store manifest-files as cache
      - name: Cache Manifest Files
        uses: actions/cache@v2 
        id: manifest-files
        env:
          cache-name: manifest-files
        with:
          path: /home/runner/work/odoo/odoo/manifest-files/*
          key: ${{ github.sha }}

  Docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      # - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        env:
          cache-name: cache-deb
        with:
          path: /home/runner/work/odoo/odoo/docker-files/*
          key: ${{ github.sha }}
      
      - name: Debug-1
        run: pwd && ls 
      - name: Debug-2
        run: ls ./docker-files
        continue-on-error: true
      - name: Debug-3
        run: ls ../
        continue-on-error: true

      # Docker Build 
      - name: Docker Build
        run: |
          sudo chmod +x ./docker-files/*
          sudo docker build ./docker-files/ -t odoo:${{github.run_number}}

      - name: Docker Login
        run: sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io
        
      - name: Docker tag & push
        run: |
          sudo docker image tag odoo:${{github.run_number}} ${{ secrets.DOCKERHUB_USERNAME }}/odoo:${{github.run_number}}
          sudo docker push ${{ secrets.DOCKERHUB_USERNAME }}/odoo:${{github.run_number}}
  
  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    needs: [Docker]

    steps:

      # To retrieve manifest-files from cache
      - name: Cache Manifest Files
        uses: actions/cache@v2 
        id: manifest-files
        env:
          cache-name: manifest-files
        with:
          path: /home/runner/work/odoo/odoo/manifest-files/*
          key: ${{ github.sha }}
     
      - name: install yq
        uses: mikefarah/yq@v4.15.1 

      # Debug
      - name: Debug-1
        run: |
          ls
          pwd
          ls ../

      - name: update infra yaml file
        run: |
          cd manifest-files
          yq e -i '.spec.template.spec.containers[0].image="${{ secrets.DOCKERHUB_USERNAME }}/odoo:${{github.run_number}}"' odoo-deployment.yaml
          cat odoo-deployment.yaml

      - name: push change
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: manifest-files/odoo-deployment.yaml
          destination_repo: Ajay-Chidambaram/k8s-argocd
          destination_branch: main
          destination_folder: manifest-files
          user_email: silambu.ajayk@gmail.com
          user_name: Ajay-Chidambaram
          commit_message: update image version ${{github.run_number}} in manifest yaml file